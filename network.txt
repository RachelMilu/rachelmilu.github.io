http协议-缓存控制:no-cache/must-revalidate/no-store

 客户端从服务器请求数据经历如下基本步骤: 
  1、如果请求命中本地缓存则从本地缓存中获取一个对应资源的"copy"； 
  2、检查这个"copy"是否fresh,是则直接返回，否则继续向服务器转发请求。 
  3、服务器接收到请求，然后判断资源是否变更，是则返回新内容，否则返回304，未变更。 
  4、客户端更新本地缓存。 
  no-cache的作用是：强制客户端跳过步骤2，直接向服务器发送请求。也就是说每次请求都必须向服务器发送。 
  must-revalidate:作用与no-cache相同，但更严格，强制意味更明显。但这只是理论上的描述，根据我在ff6上的测试，它几乎不起作用：只要请求的频率加快到一定程度，服务器就接收不到请求。 
  no-store:缓存将不存储response,包括header和body。测试结果表明，除每次请求都必发送到服务器外，响应代码均是200，且request并没有发送"If-Modified-Since"和"If-None-Match"头，这意味着缓存的确没有存储response。 
