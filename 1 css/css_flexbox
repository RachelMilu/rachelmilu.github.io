​flexbox要记的东西真多，今天就来啃一啃这块硬骨头。 
学习教程就是大漠的帖子：http://www.w3cplus.com/css3/a-guide-to-flexbox.html
初步目标有：
1，实现上下，左右居中；

首先上概念：
flexbox布局中有两种类型的元素，一种是父元素，也就是容器（称为“伸缩容器”），相对的另一种就叫子元素（称为“伸缩项目”）。
除此之外还有下面这些。。。要不咱还是先跳过概念，到时候用到再回头看。。。
主轴（main axis）：伸缩容器的主轴，伸缩项目主要沿着这条轴进行排列布局。小心，它不一定是水平的；这主要取决于“justify-content”属性（详细见下文）。
主轴起点（main-start）和主轴终点（main-end）：伸缩项目放置在伸缩容器内从主轴起点（main-start）向主轴终点（main-start）方向。
主轴尺寸（main size）：伸缩项目在主轴方向的宽度或高度就是主轴的尺寸。伸缩项目主要的大小属性要么是宽度，要么是高度属性，由哪一个对着主轴方向决定。
侧轴（cross axis）：垂直于主轴称为侧轴。它的方向主要取决于主轴方向。
侧轴起点（cross-start）和侧轴终点（cross-end）：伸缩行的配置从容器的侧轴起点边开始，往侧轴终点边结束。
侧轴尺寸（cross size）：伸缩项目的在侧轴方向的宽度或高度就是项目的侧轴长度，伸缩项目的侧轴长度属性是「width」或「height」属性，由哪一个对着侧轴方向决定。

父元素（伸缩容器）的属性有：
display: other values | flex | inline-flex; 
flex-direction: row | row-reverse | column | column-reverse/*主轴方向*/
flex-wrap: nowrap | wrap | wrap-reverse	​/*定义伸缩容器里是单行还是多行显示，侧轴的方向决定了换行的方向。*/
flex-flow: <‘flex-direction’> || <‘flex-wrap’> /*默认为 row nowrap*/
justify-content: flex-start | flex-end | center | space-between | space-around	/*定义伸缩项目沿着主轴线的对齐方式，当一行上的所有伸缩项目都不能伸缩或可伸缩但是已经达到其最大长度时，这一属性才会对多余的空间进行分配。当项目溢出某一行时，这一属性也会在项目的对齐上施加一些控制。*/
align-items: flex-start | flex-end | center | baseline | stretch /*这个主要用来定义伸缩项目可以在伸缩容器的当前行的侧轴上对齐方式。可以把他想像成侧轴（垂直于主轴）的“justify-content”。*/
align-content: flex-start | flex-end | center | space-between | space-around | stretch /*align-items是调整一行内的对齐方式，align-content则是调准伸缩行（所有的行）在伸缩容器里的对齐方式. 请注意本属性在只有一行的伸缩容器上没有效果。*/
notes：CSS的columns在伸缩容器上没有效果。float、clear和vertical-align在伸缩项目上没有效果。

子元素（伸缩项目）的属性有：
order: <integer> /*默认情况下，伸缩项目是按照文档流出现先后顺序排列。然而，“order”属性可以控制伸缩项目在他们的伸缩容器出现的顺序。*/
flex-grow: <number> (默认值为： 0)/*根据需要用来定义伸缩项目的扩展能力。它接受一个不带单位的值做为一个比例。主要用来决定伸缩容器剩余空间按比例应扩展多少空间。如果所有伸缩项目的“flex-grow”设置了“1”，那么每个伸缩项目将设置为一个大小相等的剩余空间。如果你给其中一个伸缩项目设置了“flex-grow”值为“2”，那么这个伸缩项目所占的剩余空间是其他伸缩项目所占剩余空间的两倍。负值同样生效。*/
flex-shrink: <number> (默认值为： 1) /*定义伸缩项目收缩的能力, 负值同样生效。*/
flex-basis: <length> | auto (默认值为： auto)	/*这个用来设置伸缩基准值，剩余的空间按比率进行伸缩, 负值不合法。*/
flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]/*这是“flex-grow”、“flex-shrink”和“flex-basis”三个属性的缩写。其中第二个和第三个参数（flex-shrink、flex-basis）是可选参数。默认值为“0 1 auto”。*/
align-self: auto | flex-start | flex-end | center | baseline | stretch/*用来在单独的伸缩项目上覆写默认的对齐方式。*/

实际运用：
左右居中：
<div style="
    flex-direction: row;
">
<div style="
    background-color: rebeccapurple;
    width: 100px;
    height: 100px;
    margin: auto;
">左右居中吧，皮卡丘！</div>
</div>

上下居中：
<div style="            
    display: flex;    
    justify-content: center;    
    align-items: center;
    width: 100%;
    height: 100%;
">
		<div>上下居中吧，皮卡丘！上下居中吧，皮卡丘！上下居中吧，皮卡丘！上下居中吧，皮卡丘！上下居中吧，皮卡丘！上下居中吧，皮卡丘！上下居中吧，皮卡丘！</div>
</div>


然后我想实现一个popout的error提示，参考了ionic的写法如下：
function showError(){
	var errorList = $(".myError");
	if(errorList.length < 1){
		$("<div class='myError'><div class='text-container'><span class='text'>error!</span></div></div>").appendTo("body"); 
	}
}

function hideError(){
	 $(".myError").remove();
}


css:
.myError {
	height: 100%;
	width: 100%;
	background-color: rgba(0, 0, 0, .5);
	z-index: 10000;
	position: fixed;
	top: 0;
	display: flex;
	-webkit-box-pack: center;
	justify-content: center;
	-webkit-box-align: center;
	align-items: center;
	.text-container {
		text-align: center;
		color: #666;
		border-radius: 4px;
		width: 80%;
		border-radius: 3px;
		background: #131313;
		opacity: .8;
		font-size: 15px;
		text-align: center;
		padding: 10px;
		.text {
		}
	}
}
但是这样的代码在某些安卓机上不居中，再回顾ionic的代码，人家是这么实现的：


.error-container {
	height: 100%;
	width: 100%;
	background-color: rgba(0, 0, 0, .5);
	z-index: 10000;
	position: absolute;
	top: 0;
	left: 0;
	bottom: 0;
	right: 0;
	display: -webkit-box;
	display: -webkit-flex;
	display: -moz-box;
	display: -moz-flex;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-pack: center;
	-ms-flex-pack: center;
	-webkit-justify-content: center;
	-moz-justify-content: center;
	justify-content: center;
	-webkit-box-align: center;
	-ms-flex-align: center;
	-webkit-align-items: center;
	-moz-align-items: center;
	align-items: center;
	.text-container {
		text-align: center;
		color: #666;
		border-radius: 4px;
		width: 80%;
		border-radius: 3px;
		background: #131313;
		opacity: .8;
		font-size: 15px;
		text-align: center;
		padding: 10px;
		.text {
		}
	}
}









